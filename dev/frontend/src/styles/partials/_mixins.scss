@use 'variables' as *; // Import variables to use $partials-breakpoints

// Responsive breakpoints
@mixin mobile-only {
    @media (max-width: #{map-get($medical-breakpoints, mobile)}) {
        @content;
    }
}

@mixin tablet-up {
    @media (min-width: #{map-get($medical-breakpoints, mobile) + 1px}) {
        @content;
    }
}

@mixin tablet-only {
    @media (min-width: #{map-get($medical-breakpoints, mobile) + 1px}) and (max-width: #{map-get($medical-breakpoints, tablet)}) {
        @content;
    }
}

@mixin desktop-up {
    @media (min-width: #{map-get($medical-breakpoints, tablet) + 1px}) {
        @content;
    }
}

@mixin desktop-only {
    @media (min-width: #{map-get($medical-breakpoints, tablet) + 1px}) and (max-width: #{map-get($medical-breakpoints, desktop)}) {
        @content;
    }
}

@mixin large-up {
    @media (min-width: #{map-get($medical-breakpoints, desktop) + 1px}) {
        @content;
    }
}

// Medical card styling
@mixin medical-card($clickable: false, $variant: 'default') {
    background: var(--bg-secondary);
    border: 1px solid var(--border);
    border-radius: var(--medical-card-radius);
    padding: var(--spacing-16);
    transition: all var(--medical-hover-duration) ease;

    @if $clickable {
        cursor: pointer;

        &:hover {
            border-color: var(--accent);
            transform: translateY(-2px);
            box-shadow: var(--medical-card-hover-shadow);
        }
    }

    @if $variant == 'warning' {
        border-color: var(--warning);
        background: var(--medical-low-light);
    } @else if $variant == 'danger' {
        border-color: var(--danger);
        background: var(--medical-high-light);
    } @else if $variant == 'success' {
        border-color: var(--success);
        background: var(--medical-optimal-light);
    }
}

// Status indicator styling
@mixin status-indicator($status) {
    @if $status == 'optimal' {
        background: var(--medical-optimal-light);
        color: var(--medical-optimal);
        border: 1px solid var(--medical-optimal-border);
    } @else if $status == 'high' {
        background: var(--medical-high-light);
        color: var(--medical-high);
        border: 1px solid var(--medical-high-border);
        animation: pulse-danger 2s infinite;
    } @else if $status == 'low' {
        background: var(--medical-low-light);
        color: var(--medical-low);
        border: 1px solid var(--medical-low-border);
        animation: pulse-warning 2s infinite;
    }
}

// Category badge styling
@mixin category-badge($category) {
    padding: var(--spacing-4) var(--spacing-12);
    border-radius: var(--medical-badge-radius);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-semibold);
    text-transform: uppercase;
    letter-spacing: 0.5px;

    @if $category == 'hematologie' {
        background: var(--medical-hematologie-light);
        color: var(--medical-hematologie);
        border: 1px solid var(--medical-hematologie-border);
    } @else if $category == 'lipide' {
        background: var(--medical-lipide-light);
        color: var(--medical-lipide);
        border: 1px solid var(--medical-lipide-border);
    } @else if $category == 'metabolic' {
        background: var(--medical-metabolic-light);
        color: var(--medical-metabolic);
        border: 1px solid var(--medical-metabolic-border);
    } @else if $category == 'hepatic' {
        background: var(--medical-hepatic-light);
        color: var(--medical-hepatic);
        border: 1px solid var(--medical-hepatic-border);
    } @else if $category == 'renal' {
        background: var(--medical-renal-light);
        color: var(--medical-renal);
        border: 1px solid var(--medical-renal-border);
    } @else if $category == 'hormonal' {
        background: var(--medical-hormonal-light);
        color: var(--medical-hormonal);
        border: 1px solid var(--medical-hormonal-border);
    }
}

// Loading spinner
@mixin loading-spinner($size: 20px) {
    width: $size;
    height: $size;
    border: 2px solid var(--border);
    border-top-color: var(--accent);
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

// Fade in animation
@mixin fade-in($duration: var(--medical-fade-duration)) {
    animation: fadeIn $duration ease-in;
}

// Slide in animation
@mixin slide-in-up($duration: var(--medical-slide-duration)) {
    animation: slideInUp $duration ease-out;
}

// Focus states
@mixin focus-outline {
    outline: 2px solid var(--accent);
    outline-offset: 2px;
}

// Accessible hiding
@mixin sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

// Truncate text
@mixin truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

// Multi-line truncate
@mixin truncate-lines($lines: 2) {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

// Glassmorphism effect
@mixin glassmorphism {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
}

// Custom scrollbar
@mixin custom-scrollbar {
    &::-webkit-scrollbar {
        width: 8px;
        height: 8px;
    }

    &::-webkit-scrollbar-track {
        background: var(--bg-secondary);
        border-radius: var(--radius);
    }

    &::-webkit-scrollbar-thumb {
        background: var(--border);
        border-radius: var(--radius);

        &:hover {
            background: var(--text-muted);
        }
    }
}

// Grid layout helpers
@mixin medical-grid($columns: 'auto-fill', $min-width: 300px) {
    display: grid;

    @if $columns == 'auto-fill' {
        grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
    } @else {
        grid-template-columns: repeat($columns, 1fr);
    }

    gap: var(--medical-card-gap);
}

// Flex layout helpers
@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-between {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

@mixin flex-column {
    display: flex;
    flex-direction: column;
}

// Button variants
@mixin button-variant($bg-color, $text-color: var(--text-primary)) {
    background: $bg-color;
    color: $text-color;
    border: 1px solid $bg-color;

    &:hover:not(:disabled) {
        // Use CSS calc() instead of SASS darken() for CSS variables
        filter: brightness(0.9); // Darkens any color by 10%
        // Or use opacity for a lighter effect:
        // opacity: 0.9;
    }

    &:focus {
        @include focus-outline;
    }

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }
}
// Form field styling
@mixin form-field {
    background: var(--bg-secondary);
    border: 1px solid var(--border);
    border-radius: var(--radius);
    padding: var(--spacing-12) var(--spacing-16);
    color: var(--text-primary);
    font-size: var(--font-size-md);
    transition: border-color var(--medical-hover-duration) ease;

    &:focus {
        outline: none;
        border-color: var(--accent);
        box-shadow: 0 0 0 2px var(--accent-quarter);
    }

    &:disabled {
        opacity: 0.6;
        cursor: not-allowed;
    }

    &::placeholder {
        color: var(--text-muted);
    }
}

// Modal overlay
@mixin modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: var(--surface-dark-bright);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: var(--medical-modal-z);
    padding: var(--spacing-16);
}

// Print styles
@mixin print-hidden {
    @media print {
        display: none !important;
    }
}

@mixin print-visible {
    @media print {
        display: block !important;
    }
}

// High contrast mode support
@mixin high-contrast {
    @media (prefers-contrast: high) {
        @content;
    }
}

// Reduced motion support
@mixin reduced-motion {
    @media (prefers-reduced-motion: reduce) {
        @content;
    }
}
